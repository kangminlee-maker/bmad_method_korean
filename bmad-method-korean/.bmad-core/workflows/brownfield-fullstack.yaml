workflow:
  id: brownfield-fullstack
  name: 브라운필드 풀스택 개선
  description: >-
    새로운 기능, 현대화 또는 중요한 변경으로 기존 풀스택 애플리케이션을 개선하기 위한 에이전트 워크플로우.
    기존 시스템 분석과 안전한 통합을 처리합니다.
  type: brownfield
  project_types:
    - feature-addition
    - refactoring
    - modernization
    - integration-enhancement

  sequence:
    - step: enhancement_classification
      agent: analyst
      action: 개선 범위 분류
      notes: |
        적절한 경로로 라우팅하기 위해 개선 복잡성 결정:
        - 단일 스토리 (< 4시간) → brownfield-create-story 작업 사용
        - 작은 기능 (1-3개 스토리) → brownfield-create-epic 작업 사용  
        - 주요 개선 (여러 에픽) → 전체 워크플로우 계속
        
        사용자에게 질문: "개선 범위를 설명해 주실 수 있나요? 이것은 작은 수정, 기능 추가, 아니면 아키텍처 변경이 필요한 주요 개선인가요?"

    - step: routing_decision
      condition: based_on_classification
      routes:
        single_story:
          agent: pm
          uses: brownfield-create-story
          notes: "즉시 구현을 위한 단일 스토리 생성. 스토리 생성 후 워크플로우 종료."
        small_feature:
          agent: pm
          uses: brownfield-create-epic
          notes: "1-3개 스토리가 있는 집중 에픽 생성. 에픽 생성 후 워크플로우 종료."
        major_enhancement:
          continue: to_next_step
          notes: "아래의 포괄적인 계획 워크플로우 계속."

    - step: documentation_check
      agent: analyst
      action: 기존 문서 확인
      condition: major_enhancement_path
      notes: |
        적절한 프로젝트 문서가 존재하는지 확인:
        - 기존 아키텍처 문서, API 사양, 코딩 표준 찾기
        - 문서가 최신이고 포괄적인지 평가
        - 적절한 경우: document-project 건너뛰고 PRD로 진행
        - 부적절한 경우: 먼저 document-project 실행

    - step: project_analysis
      agent: architect
      action: 기존 프로젝트 분석 및 document-project 작업 사용
      creates: brownfield-architecture.md (또는 여러 문서)
      condition: documentation_inadequate
      notes: "현재 시스템 상태, 기술 부채, 제약사항을 캡처하기 위해 document-project 실행. 결과를 PRD 생성에 전달."

    - agent: pm
      creates: prd.md
      uses: brownfield-prd-tmpl
      requires: existing_documentation_or_analysis
      notes: |
        주요 개선을 위한 PRD 생성. document-project가 실행된 경우, 재분석을 피하기 위해 출력 참조.
        건너뛴 경우, 기존 프로젝트 문서 사용.
        출력 저장: 최종 prd.md를 프로젝트의 docs/ 폴더에 복사.

    - step: architecture_decision
      agent: pm/architect
      action: 아키텍처 문서 필요 여부 결정
      condition: after_prd_creation
      notes: |
        아키텍처 계획이 필요한지 결정하기 위해 PRD 검토:
        - 새로운 아키텍처 패턴 → 아키텍처 문서 생성
        - 새로운 라이브러리/프레임워크 → 아키텍처 문서 생성
        - 플랫폼/인프라 변경 → 아키텍처 문서 생성
        - 기존 패턴 따르기 → 스토리 생성으로 건너뛰기

    - agent: architect
      creates: architecture.md
      uses: brownfield-architecture-tmpl
      requires: prd.md
      condition: architecture_changes_needed
      notes: "중요한 아키텍처 변경에 대해서만 아키텍처 생성. 출력 저장: 최종 architecture.md를 프로젝트의 docs/ 폴더에 복사."

    - agent: po
      validates: all_artifacts
      uses: po-master-checklist
      notes: "통합 안전성과 완전성을 위해 모든 문서 검증. 모든 문서에 대한 업데이트가 필요할 수 있음."

    - agent: various
      updates: any_flagged_documents
      condition: po_checklist_issues
      notes: "PO가 문제를 발견한 경우, 관련 에이전트로 돌아가 수정하고 업데이트된 문서를 docs/ 폴더로 다시 내보내기."

    - agent: po
      action: shard_documents
      creates: sharded_docs
      requires: all_artifacts_in_project
      notes: |
        IDE 개발을 위한 문서 샤딩:
        - 옵션 A: PO 에이전트를 사용하여 샤딩: @po 후 docs/prd.md 샤딩 요청
        - 옵션 B: 수동: shard-doc 작업 + docs/prd.md를 채팅으로 드래그
        - 샤딩된 콘텐츠가 있는 docs/prd/ 및 docs/architecture/ 폴더 생성

    - agent: sm
      action: create_story
      creates: story.md
      requires: sharded_docs_or_brownfield_docs
      repeats: for_each_epic_or_enhancement
      notes: |
        스토리 생성 사이클:
        - 샤딩된 PRD의 경우: @sm → *create (create-next-story 사용)
        - 브라운필드 문서의 경우: @sm → create-brownfield-story 작업 사용
        - 사용 가능한 문서에서 스토리 생성
        - 스토리는 "초안" 상태로 시작
        - 브라운필드의 경우 추가 컨텍스트 수집이 필요할 수 있음

    - agent: analyst/pm
      action: review_draft_story
      updates: story.md
      requires: story.md
      optional: true
      condition: user_wants_story_review
      notes: |
        선택사항: 초안 스토리 검토 및 승인
        - 참고: story-review 작업이 곧 제공됨
        - 스토리 완전성과 정렬 검토
        - 스토리 상태 업데이트: 초안 → 승인됨

    - agent: dev
      action: implement_story
      creates: implementation_files
      requires: story.md
      notes: |
        개발 에이전트 (새 채팅): @dev
        - 승인된 스토리 구현
        - 모든 변경사항으로 파일 목록 업데이트
        - 완료 시 스토리를 "검토"로 표시

    - agent: qa
      action: review_implementation
      updates: implementation_files
      requires: implementation_files
      optional: true
      notes: |
        선택사항: QA 에이전트 (새 채팅): @qa → review-story
        - 리팩토링 능력이 있는 시니어 개발자 검토
        - 작은 문제 직접 수정
        - 남은 항목에 대한 체크리스트 남김
        - 스토리 상태 업데이트 (검토 → 완료 또는 검토 유지)

    - agent: dev
      action: address_qa_feedback
      updates: implementation_files
      condition: qa_left_unchecked_items
      notes: |
        QA가 미확인 항목을 남긴 경우:
        - 개발 에이전트 (새 채팅): 남은 항목 처리
        - 최종 승인을 위해 QA로 복귀

    - repeat_development_cycle:
      action: continue_for_all_stories
      notes: |
        모든 에픽 스토리에 대해 스토리 사이클 반복 (SM → Dev → QA)
        PRD의 모든 스토리가 완료될 때까지 계속

    - agent: po
      action: epic_retrospective
      creates: epic-retrospective.md
      condition: epic_complete
      optional: true
      notes: |
        선택사항: 에픽 완료 후
        - 참고: epic-retrospective 작업이 곧 제공됨
        - 에픽이 올바르게 완료되었는지 검증
        - 학습 사항과 개선사항 문서화

    - workflow_end:
      action: project_complete
      notes: |
        모든 스토리가 구현되고 검토됨!
        프로젝트 개발 단계 완료.
        
        참조: .bmad-core/data/bmad-kb.md#IDE Development Workflow

  flow_diagram: |
    ```mermaid
    graph TD
        A[시작: 브라운필드 개선] --> B[analyst: 개선 범위 분류]
        B --> C{개선 크기?}
        
        C -->|단일 스토리| D[pm: brownfield-create-story]
        C -->|1-3 스토리| E[pm: brownfield-create-epic]
        C -->|주요 개선| F[analyst: 문서 확인]
        
        D --> END1[개발 구현으로]
        E --> END2[스토리 생성으로]
        
        F --> G{문서 적절?}
        G -->|아니오| H[architect: document-project]
        G -->|예| I[pm: 브라운필드 PRD]
        H --> I
        
        I --> J{아키텍처 필요?}
        J -->|예| K[architect: architecture.md]
        J -->|아니오| L[po: 아티팩트 검증]
        K --> L
        
        L --> M{PO 문제 발견?}
        M -->|예| N[문제 수정]
        M -->|아니오| O[po: 문서 샤딩]
        N --> L
        
        O --> P[sm: 스토리 생성]
        P --> Q{스토리 유형?}
        Q -->|샤딩된 PRD| R[create-next-story]
        Q -->|브라운필드 문서| S[create-brownfield-story]
        
        R --> T{초안 검토?}
        S --> T
        T -->|예| U[검토 및 승인]
        T -->|아니오| V[dev: 구현]
        U --> V
        
        V --> W{QA 검토?}
        W -->|예| X[qa: 검토]
        W -->|아니오| Y{더 많은 스토리?}
        X --> Z{문제?}
        Z -->|예| AA[dev: 수정]
        Z -->|아니오| Y
        AA --> X
        Y -->|예| P
        Y -->|아니오| AB{회고?}
        AB -->|예| AC[po: 회고]
        AB -->|아니오| AD[완료]
        AC --> AD

        style AD fill:#90EE90
        style END1 fill:#90EE90
        style END2 fill:#90EE90
        style D fill:#87CEEB
        style E fill:#87CEEB
        style I fill:#FFE4B5
        style K fill:#FFE4B5
        style O fill:#ADD8E6
        style P fill:#ADD8E6
        style V fill:#ADD8E6
        style U fill:#F0E68C
        style X fill:#F0E68C
        style AC fill:#F0E68C
    ```

  decision_guidance:
    when_to_use:
      - 개선에 조정된 스토리가 필요
      - 아키텍처 변경이 필요
      - 중요한 통합 작업 필요
      - 위험 평가 및 완화 계획 필요
      - 여러 팀 구성원이 관련 변경 작업 수행

  handoff_prompts:
    classification_complete: |
      개선 분류: {{enhancement_type}}
      {{if single_story}}: 즉시 구현을 위해 brownfield-create-story 작업으로 진행.
      {{if small_feature}}: brownfield-create-epic 작업으로 집중 에픽 생성.
      {{if major_enhancement}}: 포괄적인 계획 워크플로우 계속.
    
    documentation_assessment: |
      문서 평가 완료:
      {{if adequate}}: 기존 문서가 충분합니다. PRD 생성으로 직접 진행.
      {{if inadequate}}: PRD 전에 현재 시스템 상태를 캡처하기 위해 document-project 실행.
    
    document_project_to_pm: |
      프로젝트 분석 완료. 주요 결과가 다음에 문서화됨:
      - {{document_list}}
      PRD 생성에 이러한 결과를 사용하고 동일한 측면을 재분석하지 않도록 하십시오.
    
    pm_to_architect_decision: |
      PRD 완료 및 docs/prd.md로 저장됨. 
      아키텍처 변경 식별: {{yes/no}}
      {{if yes}}: 다음을 위한 아키텍처 문서 생성 진행: {{specific_changes}}
      {{if no}}: 아키텍처 변경 필요 없음. 검증으로 진행.
    
    architect_to_po: "아키텍처 완료. docs/architecture.md로 저장하십시오. 통합 안전성을 위해 모든 아티팩트를 검증해 주십시오."
    
    po_to_sm: |
      모든 아티팩트 검증됨. 
      사용 가능한 문서 유형: {{sharded_prd / brownfield_docs}}
      {{if sharded}}: 표준 create-next-story 작업 사용.
      {{if brownfield}}: 다양한 문서 형식을 처리하기 위해 create-brownfield-story 작업 사용.
    
    sm_story_creation: |
      {{documentation_type}}에서 스토리 생성.
      {{if missing_context}}: 스토리 생성 중 사용자로부터 추가 컨텍스트를 수집해야 할 수 있음.
    
    complete: "모든 계획 아티팩트가 검증되고 개발을 시작할 수 있습니다. 사용 가능한 문서 형식을 기반으로 스토리가 생성됩니다."
